//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "login_data")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub login: String,
    #[sea_orm(unique)]
    pub user_id: Uuid,
    pub salt: String,
    pub hash: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::user_data::Entity")]
    UserData,
    #[sea_orm(has_many = "super::user_pfp::Entity")]
    UserPfp,
    #[sea_orm(has_many = "super::posts::Entity")]
    Posts,
}

impl Related<super::user_data::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserData.def()
    }
}

impl Related<super::user_pfp::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserPfp.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
