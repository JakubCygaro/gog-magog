//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user_pfp")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub user_id: Uuid,
    #[sea_orm(column_type = "Blob", nullable)]
    pub data: Option<Vec<u8>>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::login_data::Entity",
        from = "Column::UserId",
        to = "super::login_data::Column::UserId",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    LoginData,
}

impl Related<super::login_data::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LoginData.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
